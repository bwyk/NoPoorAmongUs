@using Models.ViewModels
@model GradingVM
<div class="container p-3">
    <div class="row pt-4">
        <div class="col-6">
            <h2 class="text-primary">Grading</h2>
        </div>

    </div>
    <br /><br />
    <h4>Grading Table for @(Model.Assessment.Name)</h4>
    <form method="post" asp-action="SaveGrades" enctype="multipart/form-data">
        <table class="table table-bordered table-striped" style="width:100%">
            <thead>
                <tr>

                    <th>Student</th>
                    <th>Earned Points</th>
                    <th>Maximum Points</th>
                    <th></th>
                </tr>
            </thead>


            @*@foreach (var obj in Model.CourseEnrollmentList)
            {
            <tr>
            <td>@(obj.Student.FirstName + " " + obj.Student.LastName)</td>
            @if(Model.AlreadyGradedList.
            <!-- if the grade is already in the DB, load the score into the value-->
            <td><input type="number" asp-for="Grade.Score" value="0" class="form-control" />
            <span asp-validation-for="Grade.Score" class="text-danger"></span></td>
            <td>@Model.Assessment.MaxScore</td>
            </tr>
            }*@

            @for (int i = 0; i < Model.StudentGrades.Count(); i++)
            {


                <input asp-for="@Model.Grades[i].Id" value="@Model.StudentGrades[i].GradeId" hidden />
                <input asp-for="@Model.Grades[i].Assessment.Id" value="@Model.Assessment.Id" hidden />
                <input asp-for="@Model.Grades[i].CourseEnrollment.Id" value="@Model.CourseEnrollmentList[i].Id" hidden />
                @*                <input asp-for="@Model.Grade[i].CourseEnrollment" value="@Model.CourseEnrollmentList[i]" hidden />
            <input asp-for="@Model.Grade[i].Assessment" value="@Model.Assessment" hidden />*@

                <tr>
                    <td>@(Model.StudentGrades[i].Student.FirstName + " " + Model.StudentGrades[i].Student.LastName)</td>
                    <!-- if the grade is already in the DB, load the score into the value-->
                    <td>
                        <input type="number" asp-for="Grades[i].Score" value="@(Model.StudentGrades[i].CurrentScore)" class="form-control" />
                        <span asp-validation-for="Grades[i].Score" class="text-danger"></span>
                    </td>
                    <td>@Model.StudentGrades[i].MaxScore</td>
                </tr>
            }
            <input asp-for="@Model.StudentGrades" value="@Model.StudentGrades" hidden />


        </table>
        <br />
        <button type="submit" class="btn btn-primary mx-2">Save All Changes</button>
    </form>
    <br />
    <a asp-controller="Grading" asp-action="CourseSelect"
       class="btn btn-secondary mx-2">Back to Course Select</a>


</div>

@section Scripts {
    @{
        <partial name="_ValidationScriptsPartial" />
    }
    }

